@{
    ViewData["Title"] = "Hỏi đáp";
}
<section class="" style="height: 120px; background-color: #252930; margin-bottom: 5px">
    <div></div>
</section>

<section class="page-header" style="background-image: url(/images/backgrounds/page-header-bg-1-1.jpg);">
    <div class="container">
        <h2>Tìm hiểu thêm với AI</h2>
    </div><!-- /.container -->
</section><!-- /.page-header -->

<section class="faq-one">
    <div class="container">
        <div class="faq-one__top">
            <div class="block-title">
                <p>Hỏi Đáp</p>
            </div><!-- /.block-title -->
            <div style="margin-top: 40px; margin-bottom: 40px;">
                <form id="questionForm">
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <textarea id="questionInput" class="form-control" rows="4" placeholder="Nhập câu hỏi của bạn ở đây..." aria-label="Nhập câu hỏi của bạn"></textarea>
                    </div>
                    <button type="button" id="submitQuestion" class="btn btn-primary">Gửi câu hỏi</button>
                </form>

                <div id="answerArea" style="margin-top: 20px;">
                    <h4 hidden="true">Câu trả lời:</h4>
                    <p id="answerText"></p>
                    <button id="playAnswerBtn" class="btn btn-secondary" style="display:none; margin-top:10px;">🔊 Nghe câu trả lời</button>
                </div>
            </div>
        </div><!-- /.faq-one__top -->
        
    </div><!-- /.container -->
</section><!-- /.faq-one -->
<script>
    document.getElementById('submitQuestion').addEventListener('click', askGemini);

    async function askGemini() {
        const button = document.getElementById('submitQuestion');
        const question = document.getElementById('questionInput').value;
        const answerTextElement = document.getElementById('answerText');

        // Disable button to prevent multiple submissions
        button.disabled = true;
        answerTextElement.classList.remove('error');
        answerTextElement.classList.add('loading');
        answerTextElement.innerText = "Đang xử lý...";

        // Validate input
        if (!question.trim()) {
            answerTextElement.classList.add('error');
            answerTextElement.innerText = "Vui lòng nhập câu hỏi.";
            answerTextElement.classList.remove('loading');
            button.disabled = false;
            return;
        }

        if (question.length > 500) {
            answerTextElement.classList.add('error');
            answerTextElement.innerText = "Câu hỏi không được vượt quá 500 ký tự.";
            answerTextElement.classList.remove('loading');
            button.disabled = false;
            return;
        }

        try {
            const response = await fetch('@Url.Action("AskGemini", "Ais")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ question: question })
            });

            answerTextElement.classList.remove('loading');

            if (!response.ok) {
                const errorData = await response.json();
                answerTextElement.classList.add('error');
                answerTextElement.innerText = `Lỗi: ${errorData.error || response.statusText}`;
                button.disabled = false;
                return;
            }

            const data = await response.json();
            answerTextElement.innerText = data.answer;
            playAnswerAudio();
            //document.getElementById('playAnswerBtn').style.display = 'inline-block';

        } catch (error) {
            console.error('Error:', error);
            answerTextElement.classList.add('error');
            answerTextElement.innerText = 'Đã có lỗi xảy ra khi kết nối tới server.';
        }

        button.disabled = false;
    }

    document.getElementById('playAnswerBtn').addEventListener('click', playAnswerAudio);

    async function playAnswerAudio() {
        const answerText = document.getElementById('answerText').innerText;

        try {
            const response = await fetch('/Ais/TextToSpeech', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ text: answerText })
            });

            if (!response.ok) throw new Error('Không thể phát âm thanh.');

            const audioBlob = await response.blob();
            const audioUrl = URL.createObjectURL(audioBlob);
            const audio = new Audio(audioUrl);
            audio.play();
        } catch (error) {
            //alert("Đã xảy ra lỗi khi phát âm thanh.");
        }
    }
</script>